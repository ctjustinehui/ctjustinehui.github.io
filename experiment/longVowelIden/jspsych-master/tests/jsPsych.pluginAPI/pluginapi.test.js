const root="../../";require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js"),describe("#getKeyboardResponse",function(){beforeEach(function(){var e={type:"html-keyboard-response",stimulus:"foo",choices:["Q"]};jsPsych.init({timeline:[e]})}),test("should execute a function after successful keypress",function(){var e=jest.fn();jsPsych.pluginAPI.getKeyboardResponse({callback_function:e}),expect(e.mock.calls.length).toBe(0),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),expect(e.mock.calls.length).toBe(1),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32})),expect(e.mock.calls.length).toBe(1)}),test("should execute only valid keys",function(){var e=jest.fn();jsPsych.pluginAPI.getKeyboardResponse({callback_function:e,valid_responses:[13]}),expect(e.mock.calls.length).toBe(0),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:54})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:54})),expect(e.mock.calls.length).toBe(0),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:13})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:13})),expect(e.mock.calls.length).toBe(1)}),test("should not respond when jsPsych.NO_KEYS is used",function(){var e=jest.fn();jsPsych.pluginAPI.getKeyboardResponse({callback_function:e,valid_responses:jsPsych.NO_KEYS}),expect(e.mock.calls.length).toBe(0),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:54})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:54})),expect(e.mock.calls.length).toBe(0),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32})),expect(e.mock.calls.length).toBe(0)}),test("should not respond to held keys when allow_held_key is false",function(){var e=jest.fn();document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),jsPsych.pluginAPI.getKeyboardResponse({callback_function:e,valid_responses:jsPsych.ALL_KEYS,allow_held_key:!1}),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),expect(e.mock.calls.length).toBe(0),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32})),expect(e.mock.calls.length).toBe(1)}),test("should respond to held keys when allow_held_key is true",function(){var e=jest.fn();document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),jsPsych.pluginAPI.getKeyboardResponse({callback_function:e,valid_responses:jsPsych.ALL_KEYS,allow_held_key:!0}),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),expect(e.mock.calls.length).toBe(1),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32}))})}),describe("#cancelKeyboardResponse",function(){test("should cancel a keyboard response listener",function(){var e=jest.fn(),t=jsPsych.pluginAPI.getKeyboardResponse({callback_function:e});expect(e.mock.calls.length).toBe(0),jsPsych.pluginAPI.cancelKeyboardResponse(t),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32})),expect(e.mock.calls.length).toBe(0)})}),describe("#cancelAllKeyboardResponses",function(){test("should cancel all keyboard response listeners",function(){var e=jest.fn();jsPsych.pluginAPI.getKeyboardResponse({callback_function:e}),expect(e.mock.calls.length).toBe(0),jsPsych.pluginAPI.cancelAllKeyboardResponses(),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keydown",{keyCode:32})),document.querySelector(".jspsych-display-element").dispatchEvent(new KeyboardEvent("keyup",{keyCode:32})),expect(e.mock.calls.length).toBe(0)})}),describe("#convertKeyCharacterToKeyCode",function(){test("should return the keyCode for a particular character",function(){expect(jsPsych.pluginAPI.convertKeyCharacterToKeyCode("q")).toBe(81),expect(jsPsych.pluginAPI.convertKeyCharacterToKeyCode("1")).toBe(49),expect(jsPsych.pluginAPI.convertKeyCharacterToKeyCode("space")).toBe(32),expect(jsPsych.pluginAPI.convertKeyCharacterToKeyCode("enter")).toBe(13)})}),describe("#convertKeyCodeToKeyCharacter",function(){test("should return the keyCode for a particular character",function(){expect(jsPsych.pluginAPI.convertKeyCodeToKeyCharacter(81)).toBe("q"),expect(jsPsych.pluginAPI.convertKeyCodeToKeyCharacter(49)).toBe("1"),expect(jsPsych.pluginAPI.convertKeyCodeToKeyCharacter(32)).toBe("space"),expect(jsPsych.pluginAPI.convertKeyCodeToKeyCharacter(13)).toBe("enter")})}),describe("#setTimeout",function(){test("basic setTimeout control with centralized storage",function(){jest.useFakeTimers();var e=jest.fn();jsPsych.pluginAPI.setTimeout(e,1e3),expect(e).not.toBeCalled(),jest.runAllTimers(),expect(e).toBeCalled()})}),describe("#clearAllTimeouts",function(){test("clear timeouts before they execute",function(){jest.useFakeTimers();var e=jest.fn();jsPsych.pluginAPI.setTimeout(e,5e3),expect(e).not.toBeCalled(),jsPsych.pluginAPI.clearAllTimeouts(),jest.runAllTimers(),expect(e).not.toBeCalled()})});