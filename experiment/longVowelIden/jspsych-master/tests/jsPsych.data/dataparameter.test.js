const root="../../",utils=require("../testing-utils.js");describe("The data parameter",function(){test("should record data to a trial",function(){return require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js"),new Promise(function(e){var s={type:"html-keyboard-response",stimulus:"hello",data:{added:!0}};jsPsych.init({timeline:[s],on_finish:function(){var s=jsPsych.data.get().values()[0].added;e(s)}}),utils.pressKey(32)}).then(function(e){expect(e).toBe(!0)})}),test("should record data to all nested trials",function(){return require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js"),new Promise(function(e){var s={type:"html-keyboard-response",timeline:[{stimulus:"a"},{stimulus:"b"}],data:{added:!0}};jsPsych.init({timeline:[s],on_finish:function(){var s=jsPsych.data.get().filter({added:!0}).count();e(s)}}),utils.pressKey(32),utils.pressKey(32)}).then(function(e){expect(e).toBe(2)})}),test("should record data to all nested trials with timeline variables",function(){return require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js"),new Promise(function(e){var s=[{stimulus:"a"},{stimulus:"b"}],t={timeline:[{type:"html-keyboard-response",stimulus:jsPsych.timelineVariable("stimulus")}],timeline_variables:s,data:{added:!0}};jsPsych.init({timeline:[t],on_finish:function(){var s=jsPsych.data.get().filter({added:!0}).count();e(s)}}),utils.pressKey(32),utils.pressKey(32)}).then(function(e){expect(e).toBe(2)})}),test("should work as timeline variable at root level",function(){require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js");var e={timeline:[{type:"html-keyboard-response",stimulus:"foo",data:jsPsych.timelineVariable("d")}],timeline_variables:[{d:{added:!0}},{d:{added:!1}}]};jsPsych.init({timeline:[e]}),utils.pressKey(32),utils.pressKey(32),expect(jsPsych.data.get().filter({added:!0}).count()).toBe(1),expect(jsPsych.data.get().filter({added:!1}).count()).toBe(1)}),test("should work as timeline variable at nested level",function(){require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js");var e={timeline:[{type:"html-keyboard-response",stimulus:"foo",data:{added:jsPsych.timelineVariable("added")}}],timeline_variables:[{added:!0},{added:!1}]};jsPsych.init({timeline:[e]}),utils.pressKey(32),utils.pressKey(32),console.log(jsPsych.data.get().json()),expect(jsPsych.data.get().filter({added:!0}).count()).toBe(1),expect(jsPsych.data.get().filter({added:!1}).count()).toBe(1)}),test("timeline variable should be available in trial on_finish",function(){require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js");var e={timeline:[{type:"html-keyboard-response",stimulus:"foo",data:{added:jsPsych.timelineVariable("added")},on_finish:function(e){e.added_copy=e.added}}],timeline_variables:[{added:!0},{added:!1}]};jsPsych.init({timeline:[e]}),utils.pressKey(32),utils.pressKey(32),console.log(jsPsych.data.get().json()),expect(jsPsych.data.get().filter({added_copy:!0}).count()).toBe(1),expect(jsPsych.data.get().filter({added_copy:!1}).count()).toBe(1)}),test.skip("should record data to all nested trials with timeline variables even when nested trials have own data",function(){return require(root+"jspsych.js"),require(root+"plugins/jspsych-html-keyboard-response.js"),new Promise(function(e){var s=[{stimulus:"a"},{stimulus:"b"}],t={timeline:[{type:"html-keyboard-response",stimulus:jsPsych.timelineVariable("stimulus"),data:{foo:1}}],timeline_variables:s,data:{added:!0}};jsPsych.init({timeline:[t],on_finish:function(){var s=jsPsych.data.get().filter({added:!0}).count();e(s)}}),utils.pressKey(32),utils.pressKey(32)}).then(function(e){expect(e).toBe(2)})})});